name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
      - main
    
# on: push    # Default will running for every branch.
    
jobs:
  flutter_test:
    name: Run flutter test and analyze
    runs-on: ubuntu-latest
    steps:

    # - task: Bash@3
    #   inputs:
    #     targetType: 'inline'
    #     script: |
    #       wget https://storage.googleapis.com/flutter_infra_release/releases/stable/macos/flutter_macos_2.2.3-stable.zip
    #       unzip flutter_macos_2.2.3-stable.zip
    #       export PATH="`pwd`/flutter/bin:$PATH"
    #   displayName: 'Download Flutter sdk'
    
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"

    
    # # Setup the flutter environment.
    # - uses: subosito/flutter-action@v1
    #   with:
    #     channel: 'beta' # 'dev', 'alpha', default to: 'stable'
    #     # flutter-version: '1.12.x' # you can also specify exact version of flutter
    
    # # Get flutter dependencies.
    # - run: flutter pub get
    
    # # Check for any formatting issues in the code.
    # - run: flutter format --set-exit-if-changed .
    
    # # Statically analyze the Dart code for any errors.
    # - run: flutter analyze .
    
    # # Run widget tests for our flutter project.
    # - run: flutter test
    
    # # Build apk.
    # - run: flutter build apk
    
    # # Upload generated apk to the artifacts.
    # - uses: actions/upload-artifact@v1
    #   with:
    #     name: release-apk
    #     path: build/app/outputs/apk/release/app-release.apk