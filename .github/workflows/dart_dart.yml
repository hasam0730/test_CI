name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
    - master
    
# on: push    # Default will running for every branch.
    
jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:

    - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        wget https://storage.googleapis.com/flutter_infra/releases/stable/macos/$(FLUTTER_VERSION)
        unzip $(FLUTTER_VERSION)
        export PATH="`pwd`/flutter/bin:$PATH"
    displayName: 'Download Flutter sdk'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        export PATH="`pwd`/flutter/bin:$PATH"
        flutter clean
        sed -i '' 's/generate: true/generate: false/g' pubspec.yaml
        flutter packages get
        flutter packages pub run r_flutter:generate
        flutter pub run build_runner build --delete-conflicting-outputs
        sed -i '' 's/generate: false/generate: true/g' pubspec.yaml
        flutter packages get
    displayName: 'Generate stuff'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        export PATH="`pwd`/flutter/bin:$PATH"
        flutter build apk --no-tree-shake-icons --build-name $(Build.BuildNumber)
    displayName: 'Build Android'
    
    # Setup Java environment in order to build the Android app.
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    
    # Setup the flutter environment.
    - uses: subosito/flutter-action@v1
      with:
        channel: 'beta' # 'dev', 'alpha', default to: 'stable'
        # flutter-version: '1.12.x' # you can also specify exact version of flutter
    
    # Get flutter dependencies.
    - run: flutter pub get
    
    # Check for any formatting issues in the code.
    - run: flutter format --set-exit-if-changed .
    
    # Statically analyze the Dart code for any errors.
    - run: flutter analyze .
    
    # Run widget tests for our flutter project.
    - run: flutter test
    
    # Build apk.
    - run: flutter build apk
    
    # Upload generated apk to the artifacts.
    - uses: actions/upload-artifact@v1
      with:
        name: release-apk
        path: build/app/outputs/apk/release/app-release.apk